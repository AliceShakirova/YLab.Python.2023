openapi: 3.1.0
info:
  title: "YLab.Python.2023"
  description: "Учебный проект. Задание 3*: Описать ручки API в соответствий c OpenAPI."
  version: "1.0"
servers:
  - url: https://localhost:8000/api/v1/
paths:
  /menus:
    get:
      tags:
      - Menu
      summary: "Get list of menus"
      description: "Get list of menu"
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/get_menu/id'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Menu
      summary: "Post new menu"
      description: "Add a new menu"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_menu'
      responses:
        201:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_menu'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /menus/{menu_id}:
    get:
      tags:
      - Menu
      summary: Get a menu by ID
      description: "Get target menu"
      operationId: GetTargetMenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_menu'
        404:
          description: "Menu not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
      - Menu
      summary: Update menu by ID
      description: "Update target menu"
      operationId: UpdateTargetMenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_menu'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_menu'
        404:
          description: "Menu not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Menu
      summary: Delete menu by ID
      description: "Delete target menu"
      operationId: DeleteTargetMenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
      responses:
        200:
          description: "The menu has been deleted"
          content:
            application/json:
              schema:
                properties:
                      status:
                        type: boolean
                        example: True
                      message:
                        type: string
                        example: "The menu has been deleted"
        404:
          description: "Menu not found"
          content:
            application/json:
              schema:
                properties:
                      status:
                        type: boolean
                        example: False
                      message:
                        type: string
                        example: "Menu not found"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /menus/{menu_id}/submenus:
    get:
      tags:
      - Submenu
      summary: Get list of submenus
      description: "Get all submenu"
      operationId: DeleteTargetMenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/get_submenu'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Submenu
      summary: "Post new submenu"
      description: "Add a new submenu"
      operationId: PostNewSubmenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_submenu'
      responses:
        201:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_submenu'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /menus/{menu_id}/submenus/{submenu_id}:
    get:
      tags:
      - Submenu
      summary: Get a submenu by ID
      description: "Get target submenu"
      operationId: GetTargetSubmenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_submenu'
        404:
          description: "Submenu not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submenu_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Submenu
      summary: Update submenu by ID
      description: "Update target submenu"
      operationId: UpdateTargetSubmenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_submenu'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_submenu'
        404:
          description: "Submenu not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submenu_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Submenu
      summary: Delete submenu by ID
      description: "Delete target submenu"
      operationId: DeleteTargetSubmenu
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
      responses:
        200:
          description: "The submenu has been deleted"
          content:
            application/json:
              schema:
                properties:
                      status:
                        type: boolean
                        example: True
                      message:
                        type: string
                        example: "The submenu has been deleted"
        404:
          description: "Submenu not found"
          content:
            application/json:
              schema:
                properties:
                      status:
                        type: boolean
                        example: False
                      message:
                        type: string
                        example: "Submenu not found"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /menus/{menu_id}/submenus/{submenu_id}/dishes:
    get:
      tags:
      - Dish
      summary: Get list of dish
      description: "Get all dishes"
      operationId: DeleteTargetDish
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dish'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Dish
      summary: "Post new dish"
      description: "Add a new dish"
      operationId: PostNewDish
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_dish'
      responses:
        201:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dish'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /menus/{menu_id}/submenus/{submenu_id}/dishes/{dish_id}:
    get:
      tags:
      - Dish
      summary: Get a dish by ID
      description: "Get target dish"
      operationId: GetTargetDish
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
        - $ref: '#/components/parameters/dish_id'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dish'
        404:
          description: "Dish not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dish_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Dish
      summary: Update dish by ID
      description: "Update target dish"
      operationId: UpdateTargetDish
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
        - $ref: '#/components/parameters/dish_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_dish'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dish'
        404:
          description: "Dish not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dish_not_found'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Dish
      summary: Delete dish by ID
      description: "Delete target dish"
      operationId: DeleteTargetDish
      parameters:
        - $ref: '#/components/parameters/menu_id'
        - $ref: '#/components/parameters/submenu_id'
        - $ref: '#/components/parameters/dish_id'
      responses:
        200:
          description: "The dish has been deleted"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: True
                  message:
                    type: string
                    example: "The dish has been deleted"
        404:
          description: "Dish not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: False
                  message:
                    type: string
                    example: "Dish not found"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
tags:
  - name: Menu
    description: "Действия с меню"
  - name: Submenu
    description: 'Действия с подменю'
  - name: Dish
    description: "Действия с блюдами"

components:
  parameters:
    menu_id:
      name: menu_id
      in: path
      schema:
        type: string
      required: true
    submenu_id:
      name: submenu_id
      in: path
      schema:
        type: string
      required: true
    dish_id:
      name: dish_id
      in: path
      schema:
        type: string
      required: true

  schemas:
    get_menu:
      type: object
      properties:
        id:
          type: string
          description: ID меню
          example: "a2eb416c-2245-4526-bb4b-6343d5c5016f"
        title:
          type: string
          description: Название меню
          example: "My menu 1"
        description:
          type: string
          description: Описание меню
          example: "My menu description 1"
        submenus_count:
          type: integer
          description: Количество подменю в конкретном меню
          example: 0
        dishes_count:
          type: integer
          description: Количество блюд в конкретном меню
          example: 0
    create_menu:
      type: object
      properties:
        title:
          type: string
          description: Название меню
          example: "My menu 1"
        description:
          type: string
          description: Описание меню
          example: "My menu description 1"
    menu_not_found:
      type: object
      properties:
        detail:
          type: string
          example: "menu not found"
    get_submenu:
      type: object
      properties:
        id:
          type: string
          description: ID подменю
          example: "bc19488a-cc0e-4eaa-8d21-4d486a45392f"
        title:
          type: string
          description: Название подменю
          example: "My submenu 1"
        description:
          type: string
          description: Описание подменю
          example: "My submenu description 1"
        dishes_count:
          type: integer
          description: Количество блюд в конкретном меню
          example: 0
    create_submenu:
      type: object
      properties:
        title:
          type: string
          description: Название подменю
          example: "My submenu 1"
        description:
          type: string
          description: Описание подменю
          example: "My submenu description 1"
    submenu_not_found:
      type: object
      properties:
        detail:
          type: string
          example: "submenu not found"
    get_dish:
      type: object
      properties:
        id:
          type: string
          description: ID блюда
          example: "602033b3-0462-4de1-a2f8-d8494795e0c0"
        title:
          type: string
          description: Название блюда
          example: "My dish 1"
        description:
          type: string
          description: Описание блюда
          example: "My dish description 1"
        price:
          type: string
          description: Стоимость блюда
          example: "12.50"
    create_dish:
      type: object
      properties:
        title:
          type: string
          description: Название блюда
          example: "My dish 1"
        description:
          type: string
          description: Описание блюда
          example: "My dish description 1"
        price:
          type: string
          description: Стоимость блюда
          example: "12.50"
    dish_not_found:
      type: object
      properties:
        detail:
          type: string
          example: "dish not found"
    error:
      type: object
      properties:
        message:
          type: string
          example: "Unexpected error"
